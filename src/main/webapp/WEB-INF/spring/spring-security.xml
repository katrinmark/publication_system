<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <http auto-config="true" use-expressions="true">
        <csrf disabled="true"/>
        <intercept-url pattern="/login*" access="isAnonymous()"/>
        <intercept-url pattern="/register*" access="isAnonymous()"/>

        <intercept-url pattern="/profile/*" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/user/*" access="hasAnyRole('ROLE_USER')"/>
        <intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')"/>

        <form-login
                login-page="/login"
                default-target-url="/profile"
                authentication-failure-url="/login?error"
                login-processing-url="/j_spring_security_check"
                username-parameter="username"
                password-parameter="password"/>

        <logout logout-success-url="/login?logout"
                logout-url="/j_spring_security_logout"/>

    </http>

    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="bcryptEncoder"/>
            <jdbc-user-service data-source-ref="dataSource"
                               authorities-by-username-query="
            SELECT u.username as username, r.name as authority FROM users as u, role as r where u.role_id=r.id and u.username=?"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

</beans:beans>